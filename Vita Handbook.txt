
                    /:- `                             ASCII art by xy2_
              `:+//:/+++sdd  sso+/:- `                   (Width of this guide is 98 characters;  
            /+::+/++dddddddddddddddddd   o+/:- `             with TAB set to 4 character space. 
         : mmmddddddmmmmm       ddddddddddddd   so/:- ``         Configure your reader to fit   
       - mmdmmmmmmmmmmmmd _/_ /        dddddddddddd    so+/:- `           for optimal reading.) 
      +dmmmmmd   mmmmmmm   /  /_  _               dddddddddddd    s+/:- ``                      
     ommmdd       mmmmm   <__/ /_</_                         ddddddddddd    so+/- `             
    ommmmNNm   NmNNmmmd                                               ddddddddddd   +- `        
   /mmmmmmNmmmNmNNmmmm     _    _          _    ,                               ddd/::+ `  `    
   dmmmmmmNNNNmmmmmmmd    ' )  / _/_      ' )  /              / /        /      dddmdd/:/::-    
  smmmmmmm#@@@#mmmmmd      (  /o /  __.    /--/ __.  ____  __/ /____ __ /_     dddmdddddd//::-  
  mNmmmmm##   #mmmmm        \/<_<__(_/|_  /  (_(_/|_/ / <_(_/_/_)(_)(_)/ <_    dddmmm  dddd/::  
 /mmmmmmmm    @Nmmmd                                                          dddmdd   mddmddd  
 ommmmmmmN   @mmmmd                                                           ddmmmddddmmmdddds 
 +mmmmmmmmm#@@mmmm       Text-based PS Vita comprehensive hacking guide,     ddmmmddmm  mdddddd`
  mmmmmmd mmmmmmmd                                                           ddmmmm  m dd  ddmd`
  smmmmd  mmmmmmd      fully archived with relevant hacking software        ddmmddm mddmm mmmddd
  ` mmmmmmmmmmmm                                                            ddmddddmmm  mmmddddd
   `smNmmmmmmmmmd                                                          ddmmm@@@@#d mddddddd`
     / _____mdmmmmmmdddddd                         Firmware 1.61          dddmm##  #Nmddddddddd`
      `/ ssmddddddddmmmmmmmmmdddddd                                      ddmmNM     Ndmmmmddmm/ 
         -+ ddmmmmmddddddddddddddddmmdddddd             Written by xy2_  ddmmdm     mddmmmddds  
            ` -/+s dddmmmmmmdddddddddyyyyyyyyyddddddd                    dddmddd   @mdddddddd`  
                    ` -:/os ddmmmmmmmdd d     oddddddddddddd            ddmmdddmdmmmddddddms`   
                             ` -:+o  dmmmmmmmdddddddddddddddddddddddd  dddm  ddddmmmmdmddd+     
                                       -:/+s ddmmmmmmmdddddddddddddddddddmddddddd  mNNNmo       
                                                -:/sdmdmmmmmmmdddddddddddmmmNNNNNNNNNd+         
                                                     ` ` -/+o  mmmmmmmmmN_____NNmm +-           
                                                                ` :/+sssssssssso+:              
                                                                                                
                _/_          /       _/_                                                    
        o  __   /   _   _  _/ . .  _./  o  _  __ 
        <_/ / <_<__/ (_(_)(_/_(_/_(__<__<_(_)/ / @I
        _________________________________________________________________________________________
        
      The Vita Handbook is a guide aimed at being a comprehensive, in depth and offline resource
     regrouping a vast list of tutorials, hence the name "handbook". In the current state of the
    scene, there is no end goal for hacking the Vita, but simply a collection of tricks that you
    are able to execute (as well as the ability to install various homebrew and emulators.) This
    is why the handbookk was made with the intent to be nonlinear, and that one can follow any
    tutorial this offers based on their need. 

      GET A 3.60 VITA IF YOU WANT TO FOLLOW THIS GUIDE. IF LOWER FIRMWARE, UPDATE TO 3.60. IF 
     HIGHER FIRMWARE, YOU ARE SCREWED, THERE IS NO DOWNGRADE.
    To update to 3.60, follow T2. Where can you find your firmware version? It's under
    "Settings" > "System" > "System Information".
    
      To navigate to desired section, search for the desired tag using Control+F (to navigate
     to this introduction, for example, search for @I.) When referring internally to other
    sections, the @ signs are not included on purpose. Sometimes, the handbook will refer to
    files or software: if you have downloaded the Vita Handbook repository, all relevant files 
    are within the download itself. No distincions will be made between the Vita 1000 and 2000:
    This guide supports all OSs. File location will be noted [in brackets] with
     / representing the root of the archive. Requirements for each section will be specified
     with the equal sign (=).

      This guide is also navigatable fully offline. Clone the repo with this link:
     https://github.com/xy2iii/vita-handbook.git then open Vita Handbook.txt in your favorite
    text editor (under *nix or OSX vim/emacs is recommended, or if under Windows, Notepad++).
                     _                                             
        _/_      /  //         /)               _/_         _/_   
        /  __.  /__// _    _  //    _. _  __    /  _  __    /  _  
       <__(_/|_/_)</_</_  (_)//_   (__(_)/ / <_<__</_/ / <_<__/_)_ @C
        _____________________/>__________________________________________________________________
                            </                                     
      * | Introduction | @I
      
      * | Table of Contents | @C
    
      * | Tricks | @T
     1. QCMA - Alternative Content Manager Assistant | @T1
     2. QCMA - Updating to 3.60 | @T2
    a. Alternative - PSTV 3.60 update | @T2A
     3. HENkaku - Installing HENkaku and getting access to the Vita filesystem | @T3
    a. Using HENkaku as a Content Manager replacement for videos, pictures, music | @T3A
    b. Unenslaving the memory card with HENkaku | @T3B
    C. Re-installing HENkaku without an internet connection | @T3C
     4. Getting new content (games, etc) on the Vita and activation (Any) | @T4
    a. Alternative - Dual Vita transfer | @T4A
     5. Installing VHBL | @T5
    a. Alternative - Whitelisting a PSP demo (for VHBL use) | @T5A
     6. Custom theme installation and information | @T6
     7. app.db editing: customise your LiveArea | @T7
     
      * | Advanced Tricks | @A   
     8. Registry editing: advanced Vita manipulation | @T8
    a. Changing your Vita username | @T8A
    b. AVLS removal | @T8B
    c. Swapping X and O | @T8C
    d. Enabling Semi-Debug mode | @T8D
    e. Disabling Standby and auto-dim | @T8E
    f. Changing AccountID - restore ANY Vita system backup | @T8F
     9. Account swap - host multiple accounts on a single memory card | @T9
    a. Account swap via AccountID change | @T9A
     10. Game and savedata dumping: dump entire decrypted games and saves | @ T10
    a. Writing to gamecarts - mod a game permanently or replace it with homebrew | @T10A
     11. IDU mode - Enable Content Downloader and various other tweaks | @T11

      * | Credits | @C
      
         _/_          /     
         /  __  o _. /_  _  
        <__/ (_<_(__/ <_/_)_ @T
        _________________________________________________________________________________________

       1. QCMA - Alternative Content Manager Assistant | @T1
       ######################################################################################
       
       CMA is an alternative content manager assistant, and vital for doing anything on your
     Vita. It will be required for most tutorials below, and is as well a good alternative to
    Sony's CMA for casual use.
     
      = QCMA works on any firmware.
      
      To install QCMA, simply run the corresponding file [/QCMA/QCMA Windows.exe; 
     /QCMA/QCMA OSX.dmg; /QCMA/QCMA *nix-etc.bz2;
    /QCMA/QCMA *nix-etc x64.bz2.].
     
      QCMA has a whole slew of options, the most notable being:
      * QCMA allows you to set directories for update files as well as packages. The former
     is useful for manual firmware updating, while the latter is useful for packages.
      * QCMA allows an offline mode, which can be used to bypass update nags when not on 
     latest firmware. To use it, your Vita has to be in Airplane mode. (make sure you restart
    it once you go into airplane mode to block properly.)
      * QCMA allows you to set a custom CMA protocol based on your Vita firmware (for
     example, if on 3.18, you will have to use the FW 3.10 - 1800010 protocol) as well as
    custom protocols.
    
       2. QCMA - Updating to 3.60 | @T2
       ######################################################################################
       
       Repeating again; if you are on a higher firmware than 3.60, there is NO DOWNGRADE. You
      will not be able to execute the rest of this guide. This will allow you to update
     to 3.60 from any firmware. Note that the procedure is different for Vita TV users: follow 
     T2A.
     
      = QCMA
      
       1. Find the 3.60 update file named PSP2UPDAT.PUP and copy it to your QCMA update folder
      (to set this, right click QCMA and go in "Settings", then set the "Update" folder, fifth
     from the top). You will also need the xml file [/psp2-updatelist.xml], place it in
     the same folder. The PUP is not provided for legal reasons.
       2. Go into airplane mode and restart your Vita (just in case).
       3. Launch QCMA and plug your Vita via USB.
       4. From "Settings", select "System Update", then "Update from PC."
       5. Check that the update says "Firmware 3.60" and NOTHING ELSE, then update your Vita.
       
      a. Alternative - PSTV 3.60 update | @T2A
      ######################################################################################
      
       The procedure to update to 3.60 on a PSTV is a little bit different, but still managable.
      
      = An USB stick
     
       1. Find the 3.60 update file [/PSP2UPDAT.PUP] and rename it to "PSVUPDAT.PUP".
       2. On the USB stick, create the directory "PSVITA", then "UPDATE" inside that directory.
      The path should now look like this: "/PSVITA/UPDATE".
       3. Transfer "PSVUPDAT.PUP" to that folder.
       4. Turn off your PSTV, then reboot in Safe Mode by holding POWER for 7 seconds on startup.
       5. Select "Update System Software" then "Update to USB storage device".
       6. Update.

       3. HENkaku - Installing HENkaku and getting access to the Vita filesystem | @T3
       ######################################################################################
      
      HENkaku has become the essential hack for the Vita, taking over the now obsolete
     MailWriter exploit that allowed writing any file anywhere to your Vita, and making it
    easier and faster to use, with no size limitations. HENkaku also allows to install
    homebrew in .VPK format, allowing the use of emulators, homebrew games and applications.
    
      = Firmware 3.60
      = A memory card with ~10MB available
      
      1. Open the "Browser" and open this URL: "henkaku.xyz". From here, tap the "Install"
     button and accept to install HENkaku. The exploit is unreliable: if you get the "C2-12828"
    error try again twice, then close the browser entirely (by peeling it off) and try
    again. Be patient, it can take a lot of tries.
      2. After a successful entry, the browser will be taken over and the "molecule" logo will
     display on the lower left corner of the screen. From there, simply wait for the install to
    finish; the browser will close automatically.
      3. A new bubble called "molecularShell" will appear, granting full 
     access to the filesystem.
     
      Each time you power off your Vita, you will need to install HENkaku again. As this
     can be a frustating process, I recommend not powering off your Vita - ever - unless it
    requires it.
    
      You will need a FTP client to transfer files to your Vita. I recommend Filezilla: you can
     find the respective installers under [/Filezilla]. FTP clients are available for
    smartphones as well. To transfer files, go to molecularShell, press SELECT on your Vita,
    then copy the IP address to the FTP client, set the port to 1337, and connect.
    
      How to install homebrew? Simply find the homebrew you want in .vpk format, transfer it
     anywhere you want onto your vita (I recommend making a vpk folder under ux0: for this),
    then select the file and press X to install the package in molecularShell.
    
      To write or delete files, simply use FTP via your FTP client. molecularShell offers
     file management function which can be done without FTP as well.
   
      Since HENkaku abolishes filesystem restrictions, you can also use it to retrieve files
     from the pspemu. When PSP games are run, they are simply run inside the Vita's own PSP
    emulator. Normally CMA makes all the PSP side files you need accessible (such as games)
    but certain files, such as in-game recordings, will be saved to the pspemu's directory.
    For this case, you can find the saved videos under "ux0:pspemu/VIDEO".
 
      Most of all, if you simply want to mess around, some info is included with the handbook:
     [Filesystem Listing.txt] lists all the available files on a stock 3.30 Vita, which are all
    dumpable.
          
      a. Using HENkaku as a Content Manager replacement for videos, pictures, music | @T3A
      ######################################################################################
      
       This is a simple trick, but the information is so important it deserves a separate
      tutorial. You might have noticed that HENkaku could access the Vita filesystem: does
     this mean you can use it as a replacement for CM? The answer is yes, although not
     for games: you will still need to use CM for this. Note that this works in both directions:
     you can both transfer and receive with this.
     
       For pictures, screenshots are located at ux0:picture/SCREENSHOT/(lettered folders). Camera
      shots are located at ux0:picture/CAMERA/(lettered folders). Transferred content is under
     ux0:picture/ALL.
       For music, all music is under ux0:music/(lettered folders).
       For videos, all music is under ux0:video/(lettered folders).
       
      b. Unenslaving the memory card with HENkaku | @T3B
      ######################################################################################
      
       Another simple trick, yet one which has a ton of uses. In a normal usage environment you
      can only use a memory card with a specific Vita and account. Thanfully Sony stored it on
     a very safe place: the exact directory is ux0:id.dat and removing this file will allow the
     memory card to be used on ANY vita in the world for a single use. (The id.dat is
     regenerated when you put the memory card in a Vita and power it on.
       The main use of this trick is being able to swap memory cards without formatting (if
      you own multiple memory cards, or want to use one of a friend, for example.)
     
      c. Re-installing HENkaku without an internet connection | @T3C
      #####################################################################################
      
       Sometimes your Vita will crash out of nowhere, and there's no Wi-Fi to be found anywhere
      nearby.. However, HENkaku can also be re-installed offline, without an internet connection.
     Note that this will NOT work for the initial install, only for later "activations", as
     HENkaku needs to be re-installed after a reboot.
     
       = HENkaku
       
       1. Find the [/HENkaku Offline.vpk] package and FTP it to your Vita.
       2. Install the package and run the installer.
       3. Open the "Email" app with Wi-Fi disabled and HENkaku not installed. If it asks you to
      enable Wi-Fi, decline.
       4. If you have multiple accounts, select the "HENkaku Offline" account.
       5. Go in "Inbox", then select the first e-mail.
       6. Wait 10 to 20 seconds. You might get a "Please wait.." screen, or an "An error has
      occured" screen, both several times in a row. If they appear more than four or five times
     in a row, reboot your Vita and try again.
     
       You should not delete the bubble after HENkaku is installed again. To uninstall the
      exploit, run the installer and press Circle to uninstall.
        
       4. Getting new content (games, etc) on the Vita and activation | @T4
       ######################################################################################
      
      One of the first things you may notice upon getting an older firmware Vita is the inability
     to do pretty much anything. Sony gated older firmwares very restrictively on purpose in
    order to force people to update to newer firmwares and have as little people as possible on
    old firmwares. The most crippling is the inability to get new games, which is required for
    most exploits.. hovewer, there is a way around this. This method will also activate your
    Vita.
    
      = A PS3
      = An USB cable
      = QCMA
      
      1. Download desired content on the PS3.
      2. Set the Vita to airplane mode and reboot. Set QCMA to "Offline Mode."
      3. Connect your Vita to your PC. Once it has connected, plug out the USB cable; do not
     click OK on the error message just yet!
      4. Connect your Vita to your PS3 and click OK on the error message. Now you should be
     able to connect to the PS3 safely, and transfer the desired content. Note that transfer
    will also conveniently activate your Vita.
    
      4a. Alternative - Dual Vita transfer | @T4A
      #######################################################################################
      
      Don't own a PS3? As long as you own another Vita with your account on it, you are still
     able to transfer games back to your older firmware Vita. Note that this does NOT activate
    the account: you need a PS3 for that, and there is no way around it. This will also not
    work for transferring PS1/PSP games.
     
      = Two Vitas, one being on latest firmware (both on your account)
      = QCMA
      
      1. Download the desired content on the latest firmware Vita.
      2. Make a backup of the content and transfer it to your PC via QCMA.
      3. Set the older firmware Vita to airplane mode and reboot. Set QCMA to "Offline Mode."
      4. Connect your Vita to your PC and transfer the game backup to the older firmware Vita.
    
       5. Installing VHBL | @T5
       ######################################################################################
    
      VHBL only allows you to run homebrew and doesn't give you access to the full
     unrestricted PSP environment. Using this, you can run any homebrew the PSP is able to
    run, with some improved performance.
    
      = HENkaku
      = Any PSP game/demo/mini (minis have limitations, use a PSP game if you can)
      
      1. Install your PSP game/demo/mini.
      2. FTP to your Vita.
      3. Navigate to "ux0:pspemu/PSP/GAME/XXXXXXXXXX" where XXXXXXXXXX is your game name.
     You can guess the correct game by going inside the folders and looking at the pngs, or
    knowing the game ID. Once done, transfer [/VHBL/PBOOT.PBP] to that location.
      4. Navigate to "ux0:pspemu/PSP/SAVEDATA and transfer [/VHBL/VHBL01234] to that location.
      5. Power off your Vita and boot into recovery mode by holding POWER + R + PS. Select 
     "Rebuild Database". You now have VHBL!
     
      If you are familiar with PSP homebrew, you know that homebrew was copied to /PSP/GAME
     (transfering the entire folder). Here it is the exact same thing, but homebrew folders
	are transferred to "ux0:pspemu/PSP/VHBL". For example, if you want to transfer gPSP,
	your path would look like this: "ux0:pspemu/PSP/VHBL/GPSP".
     
      For lazy users, a complete homebrew pack has been put in [/VHBL/Starter Pack]. Simply
     transfer its contents to "ux0:pspemu/PSP/VHBL".
     
     a. Alternative - Whitelisting a PSP demo (for VHBL use) | @T5A
     ######################################################################################
     
      If you've been seeking for PSP demos for use with VHBL (and don't want to sacrifice
     a game) you might notice that there are a very limited number of PSP demos avaible.
    This is on purpose: Sony "blacklisted" every PSP demo in case a PSP exploit would
    emerge. There is one exception to this: the server-side blacklist didn't work and some
    games got 'leaked' for use as demos, such as Ape Escape.
    
      What happens when you try to transfer a PSP demo, then? The truth is that it actually
     transfers, but simply does not show up (and as such, is effectively unplayable.)
    With HENkaku, we have the ability to modify every file on the filesystem, and as such
    effectively edit the whitelist. The main advantage of using a custom demo is that it
    can be much smaller in size than the "leaked" demos.
    
      Note that this messes with a system partiton, vs0. If you are scared of messing up
     your Vita, don't do this!
     
      = HENkaku
      = A PSP demo
      = A PS3
    
      1. Install VitaRW [/VitaRW.vpk].
      2. Run VitaRW on your Vita. Press PS once and go back in VitaRW again (without closing
     it) since it will stop at one partition; once you do this, VitaRW will close.
      3. Reboot your Vita.
      4. FTP to your Vita and extract vs0:data/internal/launch/list_launch_emu.dat.
      5. Find the TitleID of your PSP game you wish to install; you can ususally find this 
     via a simple web search. Once found, edit list_launch_emu.dat and add that TitleID. Note 
    that games inside list_launch_emu are classed by alphabetical order, so don't simply add
    a new line randomly and follow alphabetically to add your game.
      6. FTP it back and reboot your Vita.
      7. Transfer the demo from your PS3 following  @T4.*
      
      The demo should now appear on the LiveArea and you can use it to install VHBL.
     
       6. Custom theme installation and information | @T6
       ######################################################################################
       
      Custom themes allow the customization of the entire LiveArea environment, and it is
     possible to fake them as real themes, essentially having all functionality from 
    official themes. A collection of custom themes can be found at 
    https://www.reddit.com/r/vitathemes.
    
      = HENkaku
      
      1. FTP to your Vita.
      2. Open the Theme Installer, provided under [/Theme Installer/Theme Installer.exe] or 
     [/Theme Installer/PSVita_DB_Theme_Installer_360.jar].
      3. Type in the IP address and port of your Vita, they should be displayed on screen.
      4. Select the folder of your custom theme.
      5. Click "Install Custom theme" and wait until it has finished. You can now use the 
	theme as an official theme.
      
      Some useful info: all information is contained in theme.xml. You can open it via any
     text editor. Once here, you can modify all information about the theme as well, including
     icons, color of the top bar, BGM, the wave effect in use, background, et cetera.
     Of particular note is editing the BGM, which is in at9 format. This is Sony's proprietary
     format, and redistributing the tool to create at9 audio is questionable: you're on your own.
     
       7. app.db editing: customizing your LiveArea | @T7
       ######################################################################################
       
      Editing app.db is the ultimate layer of customization. Database files hold crucial info
     and here app.db is the LiveArea database, allowing you to customise bubble BGs and icons,
    which icons show up or not, etc. This is an online tool; to use it, follow the link below.
      https://anthe.studio/bubblestudio/

       8. Registry editing: advanced Vita manipulation | @T8
       ######################################################################################
       
      The registry, located at vd0:registry/registry.dreg, is one of the most important files
     on the entire Vita: it contains all your account information. The following subtutorials
    will allow you to use this file for advanced tweaks. You will need to use the Registry
    Editor to carry out these tweaks. It is a good idea to mess around with the registry as
    well to see some of the more obscure settings. The followings tutorials will refer to
    'locations' in the registry, for example /CONFIG/SYSTEM: these are simply the folders
    that you need to enter. You can find the Registry Editor under [/RegistryEditor.vpk].
    
      Remember that the majority of registry modifications need a reboot to work.
    
      a. Changing your Vita username | @T8A
      ######################################################################################
      
      Your Vita username is the one that is used when transferring to CMA and other things.
     To change this setting, set /CONFIG/SYSTEM/username to your desired username.
    
      b. AVLS removal | @T8B
      ######################################################################################
      
      A long awaited feature for EU users: the ability to finally disable AVLS (which enables
     back after 20 hours on EU Vitas. To change this settting:
      * Set /CONFIG/SOUND/avls to 0.
      * Set /CONFIG/SOUND/avls_timer to 0.
      Note that the change is onlh semi-permanent: AVLS will not re-enable after 20 hours,
     but it will enable again after a reboot (not that you'd reboot a Vita with HENkaku..)
    
      c. Swapping X and O | @T8C
      ######################################################################################
      
      Self explainatory: X becomes O and vice-versa. To change this setting, set
     /CONFIG/SYSTEM/button_assign to 0: this will make O swap with X. To go back to the
    default "X is enter" scheme, set it to 1.
      
      d. Enabling Semi-Debug mode | @T8D
      ######################################################################################
      
      Semi-Debug mode is a special mode for the Vita, allowing to display more detailed info
     about bubbles. To change this setting, set /CONFIG/NP/enable_np to 1.
     
      e. Disabling Standby and auto-dim | @T8E
      ######################################################################################
      
      When the Vita sits idle for a long period of time, it will go into standby (the same as
     if you did a light POWER press.) It is possible to disable this, and as such, also
    disable the dim that happens when the Vita is active with no input for a minute.
    To change this setting, set /CONFIG/POWER_SAVING/suspend_interval to 0.
    
      f. Changing AccountID - restore ANY Vita system backup | @T8F
      ######################################################################################
      
      The AccountID is a single 16 byte hex string located in your registry. In particular, it
     is important because your AccountID determines your 'identity' while transferring files
    over CM. This means, if you are able to change the AccountID, you are able to suddently use
    someone's else files! As expected, most things don't work with this, but there is one
    surprising exception: system backups (as in, backups of the ENTIRE system.) As such, getting
    another backup is equivalent to changing account, without the whole account part.
    
      = HENkaku
      = A hex editor
      = Your AccountID and the AccountID of the Vita who supplied the backup
      = A system backup
      = QCMA
      
      1. To know your AccountID, simply go in your QCMA directory and in the "Save" folder:
     the random string is your AccountID. Ask the same of the Vita owner who provided the backup.
    An example of an AccoutnID is 1234ABCD5678CDEF
      2. Switch into Airplane mode and reboot: this is important for later.
      3. Dump system.dreg and system.ireg.
      4. Open system.dreg with your hex editor. Search for a string saying "privacy_confirmation"
     and four lines above, you should find your AccountID. Alternatively, you can simply search
    for your current AccountID. Replace it with the one of the backup you want to replace.
      5. FTP system.dreg back to your vita. Keep the old registry as a backup.
      6. FROM THIS POINT ON, DO NOT POWER OFF YOUR VITA.
      7. Double-check you are in Airplane Mode; if not, immediatly stop, restore your backup,
     reboot and try again.
      8. Set QCMA to "Offline Mode", then open Content Manager and connect.
      9. Start making a system backup, then immediatly cancel. This 'refreshes' the list of 
     available backups.
      10. Select the new backup and restore!
      
      So, what can you do with this trick? Almost nothing. You can get the games on your Vita, 
     yet there's no easy way to activate (and as such get actual access to the games) other than
    owning the account.
    
      For more details: act.dat is an encrypted file which dictates whether a Vita is activated 
     or not. If it's there and valid, the Vita is activated and can play games; otherwhise, it is
    able to do nothing. The only way to activate is either by having the owner's account
    creditentials or access to his PS3.
      You might say: 'but if we have access to the backup owner's PS3, can't we get unrestricted
     access to his games?' This is correct, and a viable option if the backup owner is paranoid
     of ever giving his account, although simply sharing the account is much faster.
     
                /                      /   _/_          /     
        __.  __/, ___.  ____  _. _  __/    /  __  o _. /_  _  
       (_/|_(_/_\/(_/|_/ / <_(__</_(_/_   <__/ (_<_(__/ <_/_)_ @A
        _________________________________________________________________________________________
        
      From this section onwards, tricks will get much more advanced and difficult to pull off.
     While the tricks above could be done with simply being able to follow instructions, the next
    will take some more skill to pull off. In short: do not do this if you don't know what you
    are doing, and stick to instructions.

       9. Account swap - host multiple accounts on a single memory card | @T9
       ######################################################################################
    
      The account system on the Vita is pretty broken, and access to the filesystem also means
     that you can get as much content as you want on a single memory card, even content your
    account doesn't own! However, the actual way to play this content is a little bit more 
    complex: Sony made it so that all account files are directly on the memory card. As such,
    simply replacing those files will allow you to switch accounts with ease and without
    formatting. This is the only and most convenient way of having multiple accounts on a single
    memory card. 

      = HENkaku
      = The PSN creditentials of the accounts you wish to add

      1. Backup these four files on your account in a safe location:
      * vd0:registry/system.dreg  * tm0:npdrm/act.dat
      * vd0:registry/system.ireg  * ux0:id.dat
      (For more experienced users: you don't actually need to backup id.dat. id.dat is a file
     which contains information about your Vita, and if it doesn't match with the registry 
     it will ask you to format the memory card: you can simply delete it on each time
     you change account instead.
      2. Format your Vita and sign in with your new account, then backup these files again.
     Repeat the process for each new account.

      How do you switch the accounts? Simply replace these four files with the ones of your
     desired account. You can do this directly with HENkaku.

      a. Account swap via AccountID change | @T9A
      ######################################################################################

      This is a more complex way of executing the account swap above, consisting of a method
     to acquire someone's else 'account' without having to obtain their PSN creditentials first.
    However, the main limitation to this is the lack of activation, and as such you will not
    be able to use the account's games unless the account owner has given you this file.
      This method is essentially glorified account sharing along with the other advantages.

      = HENkaku
      = A system backup of the account you wish to add

      1. Following T8, obtain a system backup of the account you wish to acquire and 
     restore it.
      2. Back up these three files:
      * vd0:registry/system.dreg * ux0:id.dat
      * vd0:registry/system.ireg

      After this, you have secured the account and can swap back to your other account. Note that
     restoring a backup will wipe most of your data, so be sure to back up your memory card first
    as well.
        
       10. Game dumping: dump entire decrypted games (without eboot!) | @T10
       ######################################################################################

      This tutorial will allow you to entirely dump games; this means the entire decrypted
     data of a downloaded digital game, allowing, for example, to extract assets (such as
    music, backgrounds and models). Note that most music extracted from games will be in
    .at9 (ATRAC) format: currently the only way to decrypt and encrypt ATRAC is via a
    proprietary Sony tool that has been linked, and so I won't share it here.

      Note that, using this method, it is also possible to reencrypt games, as well
     as decrypt and reencrypt savedata. One last thing: because the eboot is protected by a
    different method, piracy is not possible with this yet.

      = HENkaku
      = A game, either digital or physical (gamecard)

      1. Install SQLite Browser [/SQLite Browser].
      2. FTP to ur0:shell/db/app.db on your computer. Make sure to make a backup of this!
      3. Open SQLite Browser and open app.db with it.
      4. Click on "Browse Data", select the dropdown and select "tbl_uri".
      5. Click on "New Record".
      6. Fill out the entry: On "titleId", type "NPXS1000"; on "flag", type "1" and on "scheme",
     type "ux0" if you are dumping a digital (on your memory card) game, or "gro0" if you are 
    dumping a physical (on a gamecard) game.
      7. Click on the dropdown and navigate to "tbl_appinfo". Search for a "titleId" of
     "NPXS10000".
      8. Search for the entry that mentions an eboot path (ending in eboot.bin). Replace it with
     "vs0:app/NPXS10027/eboot.bin".
      9. Save the changes and FTP the modified app.db back to your Vita in the same path:
     ur0:shell/db/app.db.
      10. Reboot your Vita.

      You have now modified app.db. This is the first step; once you have done this modification,
     you will not need to redo it again (only if you rebuild the database, in which case you
    will have to restore the modified app.db again).

      The next step is modifying the eboot. The eboot is the game binary; what we will do here is
     a simple trick to execute our own eboot, using game updates. Game updates are stored in
    ux0:patch/(TitleID), where the TitleID is an unique number assigned to the game. The trick
    here is that they have exactly the same structure as normal apps and that, when the Vita
    detects a game update, it will launch the eboot in ux0:patch/(TitleID) instead of the 
    game eboot, because it thinks it is an update!

      11. Copy the CONTENTS of ux0:app/MLCL00001 to ux0:patch/(TitleID), where (TitleID) is the
     TitleID of your game. You can find the TitleID of your game by looking in ux0:app (check the
    icons) or a simple search. This will fake a game update (that is actually molecularShell).
    A TitleID consists of 4 capital letters followed by 5 numbers, for example "PSCB00001".
      12. Open the web browser.
      13. Type "ux0:app/(TitleID)" where (TitleID) is the TitleID of your game. If you are
     dumping a physical game, use "gro0:app/(TitleID)".
      14. If done correctly, Near (on Vita) or Email (on PSTV) should open. Both will contain
     the game manual.
      15. Press PS to go back to the LiveArea.
      16. Launch your game. molecularShell should open instead.
    
      At this point, the game is decrypted (thanks to the manual and the 'game' being open) and
     you can dump files over FTP. Locations that are of interest are:
      * ux0:app/(TitleID) contains the entirety of game files
      * app0: is the same as above, but it also contains some files from ux0:patch
      * addcont0: is for DLC content
      * savedata0: is for savedata

      To modify savedata, simply modify the file and write it back: it will be re-encrypted
     automatically. For modding the game itself, you need to put the ENTIRE game dump (with your
    modifications) at ux0:patch/. Make sure to include a valid param.sfo: you can use the one
    from molecularShell.

      a. Writing to gamecard - mod a game permanently or replace it with homebrew| @T10A
      ######################################################################################

      Some gamecards contain writable partitions: these are normally used for savegames, storing
     game updates or system updates. However, it's possible to take over this partition, called
    grw0:, and install homebrew or a patched game there.

      = A working dump setup (check T9)
      = A gamecard with grw0:

      1. To check if grw0: exists, simply try to FTP to it (via molecularShell opened from the
     dumped game.)
      2. Create a patch directory: grw0:patch/.
      3. In there, insert either the dumped game in its entirety (make sure you have enough
     space!) or your desired homebrew. For homebrew, files can be found at ux0:app/(TitleID);
    transfer files in that folder.
      4. Launch your gamecard again, and your modded game or homebrew should now boot. 
 
       11. IDU mode - Enable Content Downloader and various other tweaks | @T11
       ######################################################################################

      The IDU mode (standing for In-Demonstration Unit) is a mode that can be enabled on any
     retail Vita, giving it several extra functionalities:
      * Content Downloader - download & install .pkg and .pup files from a remote website
      * ★Package Installer - install pre-downloaded .pkg files (Content Downloader outclasses
     this)
      * Ignore id.dat - this means you can swap memory cards without having to do any
     modifications
      * No standby - by default, an IDU vita does not standby (you can change this in settings);
     this carries over to a retail Vita if you do not change the setting
      * X & O swap - carries over to a retail Vita as well

      Note that an IDU vita does not behave like you may think it does, and there is a small 
     risk of softbricking (restorable via Safe Mode) as well. If you have no idea what you are
    doing, do not do this!

      = HENkaku

      1. Go into Airplane Mode and install the IDU switcher homebrew [idu-mode.vpk].
      2. Launch and press X to switch to IDU mode.
      3. Reboot your Vita.

      Your Vita will now be in IDU mode. IF you didn't diasble Wi-FI, your Vita will try to
     download (and if already downloaded, install without prompting you) the latest update,
    so be sure to set Airplane Mode or cancel the download at each boot. To convert your
    Vita back into retail, run the homebrew again and press O.

      Right off the bat, you may notice that some of your icons disappeared. Do not worry;
     simply hold L + R + UP + START and you will 'unlock' the Vita. The other problem is that
    the Vita will power off after 5 minutes if not plugged in a power source. You can bypass
    this with the following method:

      1. Power off your Vita.
      2. Power on your Vita VIA plugging it via USB (as if you were recharging your Vita.)
      3. Unlock your Vita via the button combo above (L + R + START + UP).
      4. Do a soft press of the POWER button to put your Vita into Standby, then wait until
     the notification LED stops blinking.
      5. Unplug the USB cable.
      6. Press POWER again.

      If rebooting, you will have to do this at each boot; as such, it is recommended you 
     keep your IDU Vita on.

      You can find the extra options listed here under Settings > IDU settings. Here's a quick
     rundown:
      * O Button Behavior - One of the most useful features; allows to swap X to O and vice
     versa (as if on a Japanese Vita.) This setting will carry over to retail.
      * Content Downloader - The single most useful feature in IDU mode. What this allows to
     do is download both packages (pkg) and update files (pup) then install them, but from
    any domain! For example, you could make a website that hosts a collection of packages
    and any Vita would be able to connect to it and download the packages. Note that Content
    Downloader also installs the downloaded packages legitimately (via bgdl). You can not
    install packages with DRM with this, only non-DRM packages (such as demos.)
      * Sound Output Device Selection - Allows to set sound output (either default or
     speaker.) Useful if you have a speaker.
      * Wait Time To Start Video Playback - IDU Vitas, when not unlocked, will play all videos
     on the Vita after a set amount of time (when plugged in.) This allows you to configure
    the delay or turn it off entirely.
      * Show PS4 Link icon - When not unlocked, the IDU Vita will show the PS4 Link app (in
     addition to Welcome Park, Videos, as well as any installed app on the system.)
      * Format Memory Card for Pre-installed Media - Will format your memory card. THIS IS
     MISLEADING, BEWARE! The option shows an arrow, as in to prompt for confirmation, but it
    will directly format your Vita without prompting you. Useful for quick formatting of
    a memory card.
      * Cleanup Unnecessary Files (For Games only) - Unknown. Prompts for a PUP, suggesting
     this is for a clean update to X system version with minimal content.
      * Cleanup Unneccesary Files (For Games, Movies and Background Images) - Same as above,
     but keeps more content on the card (?)
      * Check Memory Card (For Games only) - Unknown.
      * Check Memory Card (For Games, Movies and Background images) - Unknown.

      The last thing IDU mode changes is under Settings > Power Save > Enter Standby Mode
     Automatically: there is no longer a duration set, and if you change it, it will
    update on a reboot. This carries over to retail as long as you do not change the setting
    while under retail.
    
      But where is the ★Package Installer? It's simply hidden. Use Bubble Studio
     (https://anthe.studio/bubblestudio/), create a new bubble and add the ★Package Installer
    bubble and it will appear and work fully on the next reboot (unlike the FakePackage
    Installer on retail Vitas.)

                     /  _/_  
        _. __  _  __/ o /  _  
       (__/ (_</_(_/_<_<__/_)_ @C
        _________________________________________________________________________________________
        
      * Freakler for some of his tutorials.
      * Red Squirrel for his theme installer.
      * RushNY for his VHBL starter pack, slightly modified.
      * TheFloW for VitaShell.
      * xyz for vita-idu.
      * molecule for an awesome exploit, and their great work on the Vita scene.
      * All the Github contributors:
      xy2_ (41)
      robflop (1)
      
      I do not accept donations; direct them towards devs who make the scene the way it is.
     If you have downloaded this guide or its archive via any mirrors, the source is fully
    available at https://github.com/xy2iii/vita-handbook for anyone to modify.
